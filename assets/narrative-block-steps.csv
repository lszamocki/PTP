Block,Order,Description,Screenshot Help,Caption
Kerberoasting,1,"After establishing domain access, the CISA team used a tool called SharpHound to enumerate Active Directory information for the ‘<DOMAIN>’ domain. SharpHound queries the domain and obtains information such as users, computers, groups, GPOs, and more. Once this information is gathered, it can be graphically viewed using a tool called BloodHound to uncover potentially insecure relationships and configurations in Active Directory. In this instance, the team identified <# PRIVILEGED SERVICE ACCOUNTS> service accounts that are part of the 'Domain Admins' group.",Privileged service accounts in BloodHound,Service Accounts with Domain Administrator Privileges
Kerberoasting,2,The CISA team proceeded to use <TOOL AND BRIEF DESCRIPTION OF HOW IT WORKS> to initiate a Kerberoast attack. The team used the ticket-granting ticket (TGT) of the compromised user to request a ticket-granting-service (TGS) ticket for each service principal name (SPN). This action can be achieved with any domain account.,Kerberoast tool output,Kerberoasting Service Accounts
Kerberoasting,3,An example of one of the encoded tickets can be seen below. This ticket is associated with the '<ACCOUNT>' service account that is part of the 'Domain Admins' group.,Encoded TGS ticket,Encoded TGS Ticket Obtained via Kerberoasting
Kerberoasting,4,"Since a piece of each TGS ticket is encoded with the corresponding service account's password hash, the CISA team extracted that portion of each ticket and attempted to crack each account’s password offline using a basic wordlist and ruleset. The team successfully obtained the cleartext password for <NUMBER OF CRACKED HASHES> of the service accounts in about <AMOUNT OF TIME TAKEN TO CRACK>, including the privileged ‘<ACCOUNT>’ account.",Kerberos hash and cracked password for privileged account,Cracked '<ACCOUNT>' Kerberos Hash
Responder Capture and Crack,1,"The CISA team utilized the tool Responder to capture credentials from the internal network. Responder is an open-source python-based LLMNR/NBT-NS/mDNS poisoner acting in two stages. First, it will listen to multicast name resolution queries (e.g., LLMNR UDP/5355, NBT-NS UDP/137) and, under the right conditions, spoof a response directing the victim to the machine on which it is running. Once a victim tries to connect to the CISA machine, Responder will exploit the connection to obtain credentials and other data. With Responder, the team captured a hashed password for the ‘<ACCOUNT>’ account.",Responder output showing username and hash,Domain Account Hash Captured via Responder
Responder Capture and Crack,2,The CISA team used a tool called Hashcat to execute offline password cracking attempts using a common word list and rule set and successfully cracked the hash to obtain a cleartext password for the <LOW-PRIVILEGED/PRIVILEGED> ‘<ACCOUNT>’ domain account.,CRACKIN GUI or or Hashcat terminal output with cracked hash,Cracked Domain Account Password
LSASS DA Credential Dump,1,"Using the local administrative rights the '<ACCOUNT>' account has on '<HOSTNAME>,' the CISA team dumped the Local Security Authority Subsystem Service (LSASS) process with the tool <TOOLNAME>, obtaining an NTLM hash for the domain administrator account, '<DOMAIN ADMIN ACCOUNT>'. The NTLM hash can be used to authenticate via pass-the-hash.",LSASS dump output,LSASS Credential Dump on '<HOSTNAME>'
LSASS DA Credential Dump,2,"The CISA team validated domain administrator privileges by authenticating to the domain controller with the ‘<DOMAIN ADMIN ACCOUNT>’ account using the NTLM hash via pass-the-hash to list its shares and verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",NetExec output showing list of domain controller shares and permissions,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’
AD CS ESC1,1,"Using the low-privileged domain account, '<ACCOUNT>,' the CISA team enumerated Active Directory Certificate Services (AD CS) with the tool Certipy to identify vulnerable certificate templates.",Certipy enumeration command and output,Certipy Vulnerable Certificate Template Enumeration
AD CS ESC1,2,"Certipy identified a certificate template, '<TEMPLATE NAME>,' that enables any domain user to generate a certificate impersonating any other user. This is possible due to the '<GROUP NAME>' group having enrollment rights to the template and the 'Client Authentication' and 'Enrollee Supplies Subject' properties being enabled, allowing the enrollee (in this case, any account in the '<GROUP NAME>' group) to supply an arbitrary Subject Alternative Name (SAN).",Certipy output for vulnerable certificate template highlighting the dangerous enrollment rights and attributes,Vulnerable Certificate Template Properties
AD CS ESC1,3,"The CISA team used the '<ACCOUNT>' domain account to gather information about the domain with an ingestor called SharpHound that collects Active Directory data. This data was then input to BloodHound, a tool that uses graph theory to visualize the collected data for analysis of object relationships and configurations within an Active Directory or Azure environment. In this case, the team identified a domain administrator account, '<DOMAIN ADMIN ACCOUNT>' to target as part of the escalation attack. Note that any domain administrator account could have been targeted.",BloodHound GUI showing domain administrator accounts,Domain Administrator Accounts in BloodHound
AD CS ESC1,4,The CISA team successfully exploited the vulnerable attributes of the '<TEMPLATE NAME>' template using Certipy to request a certificate impersonating the '<DOMAIN ADMIN ACCOUNT>' domain administrator account.,Certipy exploitation command and output,Certificate Request via Certipy
AD CS ESC1,5,"Using Certipy in conjunction with the obtained certificate, the CISA team requested a ticket-granting ticket (TGT) for the domain administrator account. The TGT was then used to retrieve the Windows New Technology LAN Manager (NTLM) hash for the domain administrator account, '<DOMAIN ADMIN ACCOUNT>'.",Certipy TGT/hash command and output,'<DOMAIN ADMIN ACCOUNT>' Hash Obtained via Certipy
AD CS ESC1,6,"The CISA team validated domain administrator privileges by authenticating to the domain controller with the ‘<DOMAIN ADMIN ACCOUNT>’ account using the NTLM hash via pass-the-hash to list its shares and verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",NetExec output showing list of domain controller shares and permissions,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’
AD CS ESC4-ESC1,1,"Using the low-privileged domain account, '<ACCOUNT>,' the CISA team enumerated Active Directory Certificate Services (AD CS) with the tool Certipy to identify vulnerable certificate templates.",Certipy enumeration command and output,Certipy Vulnerable Certificate Template Enumeration
AD CS ESC4-ESC1,2,"The ‘<TEMPLATE NAME>’ template was configured to allow any account in the ‘<GROUP NAME>’ to modify properties of the template (via the Object Control Permissions), enabling any account in this group to introduce vulnerable conditions to the certificate template.",Certipy output for vulnerable certificate template highlighting the dangerous object control permissions,Vulnerable Certificate Template Properties
AD CS ESC4-ESC1,3,"The CISA team used Certipy in conjunction with the ‘<ACCOUNT>’ account to modify the certificate template, creating a vulnerable state that enables any domain user to generate a certificate impersonating any other user. This is possible due to the '<GROUP NAME>' group having enrollment rights to the template and the 'Client Authentication' and 'Enrollee Supplies Subject' properties being enabled, allowing the enrollee (in this case, any account in the '<GROUP NAME>' group) to supply an arbitrary Subject Alternative Name (SAN). Note: These modifications were reverted once the attack was complete.",Certipy template modification command and output,Modifying the '<TEMPLATE NAME>' Certificate Template
AD CS ESC4-ESC1,4,"The CISA team used the '<ACCOUNT>' domain account to gather information about the domain with an ingestor called SharpHound that collects Active Directory data. This data was then input to BloodHound, a tool that uses graph theory to visualize the collected data for analysis of object relationships and configurations within an Active Directory or Azure environment. In this case, the team identified a domain administrator account, '<DOMAIN ADMIN ACCOUNT>' to target as part of the escalation attack. Note that any domain administrator account could have been targeted.",BloodHound GUI showing domain administrator accounts,Domain Administrator Accounts in BloodHound
AD CS ESC4-ESC1,5,The CISA  team successfully exploited the vulnerable attributes of the modified '<TEMPLATE NAME>' template using Certipy to request a certificate impersonating the '<DOMAIN ADMIN ACCOUNT>' domain administrator account.,Certipy exploitation command and output,Certificate Request via Certipy
AD CS ESC4-ESC1,6,"Using Certipy in conjunction with the obtained certificate, the CISA team requested a ticket-granting ticket (TGT) for the domain administrator account. The TGT was then used to retrieve the Windows New Technology LAN Manager (NTLM) hash for the domain administrator account, '<DOMAIN ADMIN ACCOUNT>'.",Certipy TGT/hash command and output,'<DOMAIN ADMIN ACCOUNT>' Hash Obtained via Certipy
AD CS ESC4-ESC1,7,"The CISA team validated domain administrator privileges by authenticating to the domain controller with the ‘<DOMAIN ADMIN ACCOUNT>’ account using the NTLM hash via pass-the-hash to list its shares and verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",NetExec output showing list of domain controller shares and permissions,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’
AD CS ESC8,1,"Using the low-privileged domain account, '<ACCOUNT>,' the CISA team enumerated Active Directory Certificate Services (AD CS) with the tool Certipy to identify vulnerable certificate templates.",Certipy enumeration command and output,Certipy Vulnerable Certificate Template Enumeration
AD CS ESC8,2,"Certipy identified enrollment attributes that allow any user in the '<GROUP NAME>' group to generate a certificate impersonating any domain user. This is possible because web enrollment is enabled, the 'Request Disposition' property is set to 'Issue,' and the '<GROUP NAME>' group has permissions to enroll.",Certipy output for certificate authorities highlighting the dangerous properties,Vulnerable Certificate Authority Properties
AD CS ESC8,3,<REPLACE WITH ALTERNATE COERCION TECHNIQUE IF APPLICABLE> The CISA team used a tool called PetitPotam <INDICATE WHETHER CREDENTIALS WERE USED> to coerce the domain controller to authenticate to a CISA-controlled machine.,Coercion technique command and output,Coerced Domain Controller Authentication via <TOOL NAME>
AD CS ESC8,4,"The CISA team was running the Impacket NTLMrelayx tool simultaneously. Once the coerced authentication attempt from the domain controller was captured, NTLMrelayx relayed the authentication to the AD CS web enrollment endpoint to request a certificate for the domain controller's machine account.",NTLMrelayx relay and certificate acquisition command and output,Relaying '<DC HOSTNAME>' Authentication to Obtain Certificate
AD CS ESC8,5,"Using Certipy in conjunction with the obtained certificate, the CISA team requested a ticket-granting ticket (TGT) for the domain controller. The TGT was then used to retrieve the Windows New Technology LAN Manager (NTLM) hash for the domain controller machine account.",Certipy TGT/hash command and output,'<DC HOSTNAME>' Hash Obtained via Certipy
AD CS ESC8,6,"The CISA team used the '<ACCOUNT>' domain account to gather information about the domain with an ingestor called SharpHound that collects Active Directory data. This data was then input to BloodHound, a tool that uses graph theory to visualize the collected data for analysis of object relationships and configurations within an Active Directory or Azure environment. In this case, the team identified a domain administrator account, '<DOMAIN ADMIN ACCOUNT>' to target as part of the escalation attack. Note that any domain administrator account could have been targeted.",BloodHound GUI showing domain administrator accounts,Domain Administrator Accounts in BloodHound
AD CS ESC8,7,The CISA team used the domain controller's NTLM hash to retrieve an NTLM hash for the identified domain administrator account using the Impacket Secretsdump tool.,Impacket Secretsdump targeted credential dump command and output,Obtaining Domain Administrator NTLM Hash via Secretsdump
AD CS ESC8,8,"The CISA team validated domain administrator privileges by authenticating to the domain controller with the ‘<DOMAIN ADMIN ACCOUNT>’ account using the NTLM hash via pass-the-hash to list its shares and verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",NetExec output showing list of domain controller shares and permissions,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’
Phishing (Credential Harvest),1,The CISA team sent a phishing email to <TOTAL TARGETED USERS> <STAKEHOLDER NAME> employees informing them that <DESCRIPTION OF PRETEXT> in an attempt to coerce users to click on the embedded link.,Phishing template including subject and body,CISA Phishing Email Template
Phishing (Credential Harvest),2,"The link in the phishing email directed users to a fake, CISA-controlled login page that is a clone of <LOGIN PAGE DESCRIPTION>. Credentials submitted through this form would be transmitted to the CISA team.",Credential harvesting login form,CISA Credential Harvesting Page
Phishing (Credential Harvest),3,"If a victim user submits credentials, they are redirected to a landing page where a malicious file disguised as <DESCRIPTION OF FILE> is automatically downloaded. If the victim user executes this file, a connection is established with the CISA-controlled command-and-control server, enabling the CISA team to execute commands on the system the user executed the payload on and under the context of the account that was used to execute the payload.",Landing page with malicious file download,CISA File Download Landing Page
Phishing (Payload Execution),1,The CISA team sent a phishing email to <TOTAL TARGETED USERS> <STAKEHOLDER NAME> employees informing them that <DESCRIPTION OF PRETEXT> in an attempt to coerce users to click on the embedded link.,Phishing template including subject and body,CISA Phishing Email Template
Phishing (Payload Execution),2,"The link in the phishing email directed users to a a landing page where a malicious file disguised as <DESCRIPTION OF FILE> is automatically downloaded. If the victim user executes this file, a connection is established with the CISA-controlled command-and-control server, enabling the CISA team to execute commands on the system the user executed the payload on and under the context of the account that was used to execute the payload.",Landing page with malicious file download,CISA File Download Landing Page
Password Spray (Easily Guessable),1,The CISA team used <TOOL AND BRIEF DESCRIPTION OF HOW IT WORKS> to enumerate ‘<DOMAIN>’ domain users. This enabled the team to compile a list of accounts that could be targeted in a password attack.,Tool output showing user enumeration,'<DOMAIN>' Domain User Enumeration
Password Spray (Easily Guessable),2,"The CISA team conducted a password spray attack, attempting to authenticate as each domain user in the compiled list of accounts using a common password. This resulted in successful authentication as the <LOW-PRIVILEGED/PRIVILEGED> account, ‘<ACCOUNT NAME>.'",Password spray output highlighting the successful authentication attempt(s),'<DOMAIN>' Domain User Password Spray
Password Spray (Reuse),1,The CISA team used <TOOL AND BRIEF DESCRIPTION OF HOW IT WORKS> to enumerate ‘<DOMAIN>’ domain users. This enabled the team to compile a list of accounts that could be targeted in a password attack.,Tool output showing user enumeration,'<DOMAIN>' Domain User Enumeration
Password Spray (Reuse),2,"The CISA team conducted a password spray attack, attempting to authenticate as each domain user in the compiled list of accounts using a password discovered by <DESCRIPTION OF HOW THE PASSWORD WAS DISCOVERED>. This resulted in successful authentication as <TOTAL NUMBER OF ACCOUNTS> accounts including <ACCOUNT(S) OF INTEREST IF NOT ATTRIBUTED TO A SPECIFIC USER>.",Password spray output highlighting the successful authentication attempt(s),'<DOMAIN>' Domain User Password Spray
Responder Relay,1,"The CISA team utilized the tool Responder to establish initial domain access from the internal network. Responder is an open-source python-based LLMNR/NBT-NS/mDNS poisoner acting in two stages. First, it will listen to multicast name resolution queries (e.g., LLMNR UDP/5355, NBT-NS UDP/137) and, under the right conditions, spoof a response directing the victim to the machine on which it is running. Once a victim tries to connect to the CISA machine, Responder will exploit the connection to obtain credentials or, if used in conjunction with NTLMrelayx (part of the Impacket library), relay authentication to perform various functions.",Responder output showing captured LLMNR/NBT-NS/mDNS traffic,Name Resolution Poisoning with Responder
Responder Relay,2,"In this instance, the team relayed a valid user authentication attempt to <SELECT ONE OR MORE OF THE FOLLOWING 1. MAQ: create a new machine account, ‘<MACHINE ACCOUNT>.’ This was possible due to the default ‘MachineAccountQuota’ configuration on the domain, allowing all domain users to create up to ten (10) domain-joined machine accounts. 2. SESSION: authenticate to the ‘<HOSTNAME>’ system to open a session under the context of ‘<ACCOUNT>,’ enabling the team to proxy traffic through the session and execute commands on the target system 3. OTHER: describe how the relayed authentication was used>.",Relay tool output showing relayed authentication attempt and its outcome,Relaying Authentication to <DESCRIPTION OF ACTION PERFORMED>
List DC Shares,1,"The CISA team validated domain administrator privileges by authenticating to the domain controller with the ‘<DOMAIN ADMIN ACCOUNT>’ account using the <NTLM HASH VIA PASS-THE-HASH/PASSWORD> to list its shares and verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",NetExec output showing list of domain controller shares and permissions,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’
Active Directory Enumeration,1,"The CISA team used the ‘<ACCOUNT>’ domain account to gather information about the domain with an ingestor called SharpHound that collects Active Directory data. A tool called BloodHound was then used to visualize the collected data, enabling the team to look fordangerous misconfigurations and unintended relationships within the domain that could lead to lateral movement and/or privilege escalation. In this case, the team noticed <DESCRIPTION OF THE POTENTIALLY DANGEROUS AD CONDITION(S) OBSERVED>.",Dangerous Active Directory condition(s) in the BloodHound GUI,<DESCRIPTION OF DANGEROUS AD OBSERVATION> in BloodHound
DCSync DA Hash,1,"The CISA team leveraged the rights of the ‘<ACCOUNT>’ account to DCSync an NTLM hash for a domain administrator account. In this case, the hash for the ‘<DA ACCOUNT>’ account was dumped, but the team could have retrieved any domain account hash. The NTLM hash can be cracked offline or used via pass-the-hash to authenticate under the context of the domain administrator account without the need to know the cleartext password due to NTLM authentication being enabled.",NetExec output showing the successful DCSync attempt,Dumping a Domain Administrator Hash from '<DC HOSTNAME>'
RBCD,1,"The CISA team used the Impacket NTLMrelayx tool to listen for incoming connections. This listener was configured to relay captured authentication attempts to a domain controller, ‘<TARGET DC HOSTNAME>,’ over the LDAPS protocol.",Relay tool command and output showing listening status,Initiating Listener for Authentication Relay
RBCD,2,<REPLACE WITH ALTERNATE COERCION TECHNIQUE IF APPLICABLE> The CISA team used a tool called PetitPotam <INDICATE WHETHER CREDENTIALS WERE USED> to coerce the domain controller to authenticate to the CISA-controlled machine running NTLMrelayx.,Coercion technique command and output,Coerced Domain Controller Authentication via <TOOL NAME>
RBCD,3,"The target domain controller supports NTLMv1 authentication, enabling the NTLMrelayx tool to successfully relay the ‘<COERCED DC HOSTNAME>’ authentication over LDAP and LDAPS.",NTLMrelayx relay session output,Relaying '<COERCED DC HOSTNAME>' Authentication to '<TARGET HOSTNAME>'
RBCD,4,"Using the relay session, the CISA team first created a machine account, '<MACHINE ACCOUNT>.' Then, the team configured resource-based constrained delegation (RBCD) rights on '<TARGET DC HOSTNAME>,' enabling the CISA machine account to impersonate any user against the domain controller.",Machine account creation and RBCD commands and output,Creating Machine Account and Granting RBCD Rights
RBCD,5,"The CISA team used the '<ACCOUNT>' domain account to gather information about the domain with an ingestor called SharpHound that collects Active Directory data. This data was then input to BloodHound, a tool that uses graph theory to visualize the collected data for analysis of object relationships and configurations within an Active Directory or Azure environment. In this case, the team identified a domain administrator account, '<DOMAIN ADMIN ACCOUNT>' to target as part of the attack. Note that any domain administrator account could have been impersonated.",BloodHound GUI showing domain administrator accounts,Domain Administrator Accounts in BloodHound
RBCD,6,"With RBCD rights configured, the CISA team impersonated the ‘<DOMAIN ADMIN ACCOUNT>’ domain administrator account on ‘<TARGET DC HOSTNAME>’ and validated domain administrator privileges by listing its shares to verify read/write permissions over the administrative shares. With domain administrator privileges, the team has full control over the domain including access to reachable domain-joined systems. This access can be further abused to obtain sensitive data, broadly propagate malware (including ransomware), and perform various other malicious activities.",Impersonation and validation commands and output,'<DOMAIN CONTROLLER HOSTNAME>’ Authentication as ‘<DOMAIN ADMIN ACCOUNT>’